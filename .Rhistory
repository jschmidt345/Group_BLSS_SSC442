train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=10),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=10),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=5),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=5),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
'text'
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A='4', mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=c('4', mean(sales_prediction)), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
df$SalePrice - sales_prediction
mean(sales_prediction) - mean(df$SalePrice)
mean(df$SalePrice) - mean(sales_prediction)
library(MASS)
library(leaps)
library(caret)
library(knitr)
library(LaTeX)
library(MASS)
library(leaps)
library(caret)
library(knitr)
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
install.packages("latexpdf")
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
install.packages("latexpdf")
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
library(MASS)
library(leaps)
library(caret)
library(knitr)
install_tinytex()
library(MASS)
library(leaps)
library(caret)
library(knitr)
tinytex::install_tinytex()
ames_data <- ames_data <- read.csv('ames.csv', header = TRUE, sep=',')
data <- ames_data[, sapply(ames_data, is.integer)]
data_om <- na.omit(data)
# dropping data
drops <- c('OverallCond', 'OverallQual')
df <- data_om[, !(names(data_om) %in% drops)]
num_obs <- nrow(df)
train_index <- sample(num_obs, size=trunc(.5 * num_obs))
train_data <- df[train_index, ]
test_data <- df[-train_index, ]
traincontrol <- trainControl(method='cv', number=10)
# predicting sales price
model_test <- train(SalePrice ~ ., data=test_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
sales_prediction <- predict(model_test)
# sales prediction mean : $183703.3
# actual saleprice mean : $185506.2
# used 21 indepndent variables / predictors
# rmse for train and test
model_train <- train(SalePrice ~ ., data=train_data,
method='leapForward',
tuneGrid=data.frame(nvmax=3),
trControl= traincontrol)
rmse_train <- model_train$results['RMSE']
# train rmse = 48348.24
rmse_test <- model_test$results['RMSE']
# test rmse = 38932.07
df2 <- data.frame(A=mean(sales_prediction), B=mean(df$SalePrice), C=rmse_train, D=rmse_test)
kable(df2, col.names = c('Predicted Mean Sale Price ', 'Actual Mean Sale Price ', 'Train RMSE ', 'Test RMSE'))
source('~/Code/ssc442/lab_3.R')
sales_prediction
mean(sales_prediction)
mean(df$SalePrice)
sales_prediction
rmse(df$SalePrice, sales_prediction)
rmse(df$SalePrice, model_train)
source('~/Code/ssc442/in_class_knn.R')
source('~/Code/ssc442/in_class_knn.R')
df
source('~/Code/ssc442/in_class_knn.R')
ran
source('~/Code/ssc442/in_class_knn.R')
head(df)
source('~/Code/ssc442/in_class_knn.R')
source('~/Code/ssc442/in_class_knn.R')
source('~/Code/ssc442/in_class_knn.R')
